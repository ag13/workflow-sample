{"version":3,"sources":["workflow/WorkflowDiagram.js","common/Sheet.js","common/Toastr.js","common/useLocalStorage.js","workflow-configurations/DocumentReviewConfiguration.js","workflow-configurations/DocumentUploadConfiguration.js","workflow-configurations/DocumentSingleReviewConfiguration.js","workflow/WorkflowCreation.js","workflow/ViewWorkflow.js","workflow/WorkflowApproval.js","workflow-table/WorkFlowHome.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["WorkflowDiagram","diagramInstance","type","onNodeClick","useState","workflowType","setWorkflowType","useEffect","toLowerCase","nodes","id","height","width","offsetX","offsetY","annotations","content","stepType","stepNumber","connectors","sourceID","targetID","setTemplate","useCallback","props","onClick","alert","ref","diagram","nodeTemplate","created","args","forEach","node","add","connector","click","clickedObj","actualObject","clickedObjAnnotation","properties","useStyles","makeStyles","theme","sheetTitle","padding","margin","textAlign","drawer","flexShrink","drawerPaper","boxAlign","Sheet","isOpen","title","handleClose","children","classes","Drawer","className","variant","anchor","open","paper","DialogTitle","Box","IconButton","Toastr","header","body","style","position","top","right","Toast","show","delay","autohide","Header","Body","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","err","storedValue","setStoredValue","value","setItem","stringify","error","console","log","DocumentReviewEditConfiguration","useFormikContext","values","setFieldValue","Form","Group","Label","name","labelKey","multiple","onChange","options","placeholder","selected","reviewers","DocumentReviewViewConfiguration","fetchedWorkflow","configuration","setConfiguration","step","status","as","Row","controlId","column","sm","Col","ListGroup","map","reviewer","Item","DocumentUploadEditConfiguration","selectedDocument","DocumentUploadViewConfiguration","document","Control","plaintext","readOnly","DocumentSingleReviewEditConfiguration","nodeType","setOptions","DocumentSingleReviewViewConfiguration","WorkflowCreation","setNodeType","setStepNumber","openConfigurationSheet","setOpenConfigurationSheet","showSuccessToast","showWorkflowStartToast","setShowWorkflowStartToast","useParams","history","useHistory","workflows","setWorkflows","handleNodeClick","clickedNodeAnnotation","handleSheetClose","getNodeConfiguration","handleWorkflowSave","a","createdWorkflow","workflowName","workflowId","allWorkflows","push","initialValues","onSubmit","handleSubmit","handleChange","Container","fluid","xs","Text","Button","color","DialogContent","DialogActions","ViewWorkflow","setFetchedWorkflow","fetch","method","ok","fetchWorkflow","workflow","WorkflowApproval","rowStyle","display","justifyContent","borderBottom","WorkFlowHome","DropdownButton","Dropdown","NavLink","to","Table","striped","bordered","hover","workflowTypeLowerCase","handleRowClick","Home","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54fc2569.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  DiagramComponent\n} from \"@syncfusion/ej2-react-diagrams\"\n\n\nexport const WorkflowDiagram = ({type, onNodeClick}) => {\n\n  let diagramInstance\n\n  const [workflowType, setWorkflowType] = useState({})\n\n  useEffect(() => {\n    if(type && type.toLowerCase() === 'sequential'){\n      const sequential = {\n        nodes: [\n          {\n            id: \"node1\",\n            height: 100,\n            width: 100,\n            offsetX: 200,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 1 - Document Selection\"\n              },\n              {\n                stepType: \"documentUpload\",\n                stepNumber: \"one\"\n              }\n            ]\n          //   shape: {\n          //     type: 'HTML',\n          //   }\n          },\n          {\n            id: \"node2\",\n            height: 100,\n            width: 100,\n            offsetX: 400,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 2 - Document Review\"\n              },\n              {\n                stepType: \"singleReview\",\n                stepNumber: \"two\"\n              }\n            ]\n          },\n          {\n            id: \"node3\",\n            height: 100,\n            width: 100,\n            offsetX: 600,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 3 - Document Review\"\n              },\n              {\n                stepType: \"singleReview\",\n                stepNumber: \"three\"\n              }\n            ]\n          },\n          {\n            id: \"node4\",\n            height: 100,\n            width: 100,\n            offsetX: 800,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 4 - Document Review\"\n              },\n              {\n                stepType: \"singleReview\",\n                stepNumber: \"four\"\n              }\n            ]\n          }\n        ],\n        connectors: [\n          {\n            id: \"connector1\",\n            sourceID: \"node1\",\n            targetID: \"node2\"\n          },\n          {\n            id: \"connector2\",\n            sourceID: \"node2\",\n            targetID: \"node3\"\n          },\n          {\n            id: \"connector3\",\n            sourceID: \"node3\",\n            targetID: \"node4\"\n          }\n        ]\n      }\n      setWorkflowType(sequential)\n    }else if(type.toLowerCase() === 'parallel'){\n      const parallel = {\n        nodes: [\n          {\n            id: \"node1\",\n            height: 100,\n            width: 100,\n            offsetX: 200,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 1 - Document Selection\"\n              },\n              {\n                stepType: \"documentUpload\",\n                stepNumber: \"one\"\n              }\n            ]\n          //   shape: {\n          //     type: 'HTML',\n          //   }\n          },\n          {\n            id: \"node2\",\n            height: 100,\n            width: 100,\n            offsetX: 400,\n            offsetY: 100,\n            annotations: [\n              {\n                content: \"Step 2 - Document Review\"\n              },\n              {\n                stepType: \"multiReview\",\n                stepNumber: \"two\"\n              }\n            ]\n          }\n        ],\n        connectors: [\n          {\n            id: \"connector1\",\n            sourceID: \"node1\",\n            targetID: \"node2\"\n          }\n        ]\n      }\n      setWorkflowType(parallel)\n    }\n  }, [type])\n\n  \n\n  const setTemplate = useCallback((props) => {\n    if(props.id === 'node1'){\n      return (<button onClick={() => alert('test')}>Test</button>)\n    }\n  }, [])\n  \n\n  return (\n        <DiagramComponent id=\"diagram\" width={\"100%\"} height={\"550px\"} \n            ref={diagram => (diagramInstance = diagram)}\n            nodeTemplate={setTemplate}\n            created={(args) => {\n                workflowType.nodes.forEach(node => {\n                    diagramInstance.add(node)\n                })\n                workflowType.connectors.forEach(connector => {\n                    diagramInstance.add(connector)\n                })\n            }}\n            click={(args) => {\n                if(args){\n                    const clickedObj = args.actualObject\n                    if(clickedObj){\n                      const clickedObjAnnotation = clickedObj.properties.annotations[1]\n                      onNodeClick && onNodeClick(clickedObjAnnotation)\n                    }\n                }\n            }}\n       />\n  );\n}\n","import { Drawer, IconButton, DialogTitle, Box } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react'\n\nconst drawerWidth = 440;\n\nconst useStyles = makeStyles((theme) => ({\n    sheetTitle: {\n        padding: 0,\n        margin: '0 0 24px 24px',\n        textAlign: 'left'\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    boxAlign: {\n        textAlign: 'right'\n    }\n}))\n\nexport const Sheet = ({isOpen = false, title, handleClose, children}) => {\n\n    const classes = useStyles();\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={isOpen}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <DialogTitle className={classes.sheetTitle}>\n                <Box className={classes.boxAlign}>\n                    <IconButton onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </Box>\n                {title}\n            </DialogTitle>\n            {children}\n        </Drawer>\n    )\n}","import React from 'react'\nimport Toast from 'react-bootstrap/Toast'\n\nexport const Toastr = ({isOpen, header, body}) => {\n    return (\n        <div\n            style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            }}\n        >\n            <Toast show={isOpen} delay={3000} autohide>\n                <Toast.Header>\n                    <strong className=\"mr-auto\">{header}</strong>\n                </Toast.Header>\n                <Toast.Body>{body}</Toast.Body>\n            </Toast>\n        </div>\n    )\n}","import { useState, useCallback } from 'react'\n\nexport function useLocalStorage(\n    key,\n    initialValue\n) {\n\n    const [storedValue, setStoredValue] = useState(() => {\n        try{\n            const item = window.localStorage.getItem(key)\n            return item ? JSON.parse(item) : initialValue\n        }catch(err){\n            return initialValue\n        }\n    })\n\n    const setValue = useCallback((value) => {\n        try{\n            if(key){\n                setStoredValue(value)\n                window.localStorage.setItem(key, JSON.stringify(value))\n            }\n        }catch(error){\n            console.log(error)\n        }\n    }, [key])\n\n    return [storedValue, setValue]\n}","import React, { useState, useEffect } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { useFormikContext } from 'formik'\n\nexport const DocumentReviewEditConfiguration = () => {\n\n    const { values, setFieldValue } = useFormikContext()\n\n    const options = [\n        'Pritam',\n        'Ashish',\n        'Anupam'\n    ]\n\n    const handleChange = (value) => {\n        if(value){\n            setFieldValue('reviewers', value)\n        }\n    }\n\n    return (\n        <>\n            <Form.Group>\n                <Form.Label>Select reviewers to review</Form.Label>\n                <Typeahead\n                id=\"basic-typeahead-multiple\"\n                name=\"reviewers\"\n                labelKey=\"name\"\n                multiple\n                onChange={handleChange}\n                options={options}\n                placeholder=\"Choose reviewers...\"\n                selected={values.reviewers}\n                />\n            </Form.Group>\n        </>\n\n    )\n}\n\nexport const DocumentReviewViewConfiguration = ({fetchedWorkflow}) => {\n\n    const [configuration, setConfiguration] = useState({})\n\n    useEffect(() => {\n        //get configuration using workflowId\n        const configuration = {\n            step: 2,\n            reviewers: [\n                {\n                    name: 'Apoorva',\n                    status: 'In Progress'\n                },\n                {\n                    name: 'Aniva',\n                    status: 'Not started'\n                }\n            ]\n        }\n        console.log(configuration)\n        setConfiguration(configuration)\n    }, [fetchedWorkflow])\n\n    return (\n        <>\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"12\">\n                Reviewers\n                </Form.Label>\n                <Col sm=\"10\">\n                    {\n                        configuration && configuration.reviewers &&\n                        <ListGroup>\n                            {\n                                configuration.reviewers.map(reviewer => \n                                    <ListGroup.Item>{reviewer.name} - {reviewer.status}</ListGroup.Item>)\n                            }\n                        </ListGroup>\n                    }\n                </Col>\n            </Form.Group>\n        </>\n\n    )\n}","import React, { useState, useEffect } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { useFormikContext } from 'formik'\n\nexport const DocumentUploadEditConfiguration = () => {\n\n    const { values, setFieldValue } = useFormikContext()\n\n    const options = [\n        'F24H Wizard',\n        'MadCap Flare POC'\n    ]\n\n    const handleChange = (value) => {\n        if(value){\n            setFieldValue('selectedDocument', value)\n        }\n    }\n\n    return (\n            <>\n                <Form.Group>\n                    <Form.Label>Select document to review</Form.Label>\n                    <Typeahead\n                    id=\"basic-typeahead-single\"\n                    name=\"selectedDocument\"\n                    labelKey=\"name\"\n                    onChange={handleChange}\n                    options={options}\n                    placeholder=\"Choose a document...\"\n                    selected={values.selectedDocument}\n                    />\n                </Form.Group>\n            </>\n\n    )\n}\n\nexport const DocumentUploadViewConfiguration = ({fetchedWorkflow}) => {\n\n    const [configuration, setConfiguration] = useState({})\n\n    useEffect(() => {\n        //get configuration using workflowId\n        const configuration = {\n            step: 1,\n            document: 'F2H Wizard'\n        }\n        setConfiguration(configuration)\n    }, [fetchedWorkflow])\n\n    return (\n            <>\n                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                    <Form.Label column sm=\"12\">\n                    Document to review\n                    </Form.Label>\n                    <Col sm=\"10\">\n                    <Form.Control plaintext readOnly value={configuration.document} />\n                    </Col>\n                </Form.Group>\n            </>\n\n    )\n}","import React, { useState, useEffect } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { useFormikContext } from 'formik'\n\nexport const DocumentSingleReviewEditConfiguration = ({nodeType, stepNumber}) => {\n\n    const { values, setFieldValue } = useFormikContext()\n    const [options, setOptions] = useState([])\n\n    useEffect(() => {\n        // This is just hardcoding for the PoC\n        if(nodeType === 'multiReview'){\n            setOptions(\n                [\n                    'Pritam',\n                    'Ashish',\n                    'Anupam'\n                ]\n            )\n        }else if(nodeType === 'singleReview'){\n            if(stepNumber === 'one'){\n                setOptions([\n                    'John Doe',\n                    'Jane Doe'\n                ])\n            } else if(stepNumber === 'two'){\n                setOptions([\n                    'Akhil',\n                    'Ashwini'\n                ])\n            } else if(stepNumber === 'three'){\n                setOptions([\n                    'Auro',\n                    'Chitra'\n                ])\n            } else if(stepNumber === 'four'){\n                setOptions([\n                    'Shubho',\n                    'Biplap'\n                ])\n            }\n        }\n    }, [nodeType, stepNumber])\n\n\n    const handleChange = (value) => {\n        if(value){\n            setFieldValue(`reviewers-${stepNumber}`, value)\n        }\n    }\n\n    return (\n        <>\n            <Form.Group>\n                <Form.Label>Select reviewer to review</Form.Label>\n                <Typeahead\n                id=\"basic-typeahead-multiple\"\n                name={`reviewers-${stepNumber}`}\n                labelKey=\"name\"\n                onChange={handleChange}\n                options={options}\n                placeholder=\"Choose reviewer...\"\n                selected={values[`reviewers-${stepNumber}`] || []}\n                />\n            </Form.Group>\n        </>\n\n    )\n}\n\nexport const DocumentSingleReviewViewConfiguration = ({fetchedWorkflow}) => {\n\n    const [configuration, setConfiguration] = useState({})\n\n    useEffect(() => {\n        //get configuration using workflowId\n        const configuration = {\n            step: 2,\n            reviewers: [\n                {\n                    name: 'Apoorva',\n                    status: 'In Progress'\n                }\n            ]\n        }\n        setConfiguration(configuration)\n    }, [fetchedWorkflow])\n\n    return (\n        <>\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"12\">\n                Reviewer\n                </Form.Label>\n                <Col sm=\"10\">\n                    {\n                        configuration && configuration.reviewers &&\n                        <ListGroup>\n                            {\n                                configuration.reviewers.map(reviewer => \n                                    <ListGroup.Item>{reviewer.name} - {reviewer.status}</ListGroup.Item>)\n                            }\n                        </ListGroup>\n                    }\n                </Col>\n            </Form.Group>\n        </>\n\n    )\n}","import React, { useState, useCallback } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { WorkflowDiagram } from './WorkflowDiagram'\nimport { Sheet, Toastr, useLocalStorage } from '../common'\nimport { DocumentReviewEditConfiguration, DocumentUploadEditConfiguration, DocumentSingleReviewEditConfiguration } from '../workflow-configurations'\nimport { DialogActions, DialogContent } from '@material-ui/core'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport { Formik } from 'formik'\nimport { useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\nexport const WorkflowCreation = () => {\n\n    const [nodeType, setNodeType] = useState('')\n    const [stepNumber, setStepNumber] = useState('')\n    const [openConfigurationSheet, setOpenConfigurationSheet] = useState(false)\n    const [showSuccessToast, setShowSuccessToast] = useState(false)\n    const [showWorkflowStartToast, setShowWorkflowStartToast] = useState(false)\n    const { type } = useParams()\n    const history = useHistory()\n    const [workflows, setWorkflows] = useLocalStorage('ws:workflows', [])\n    \n    const handleNodeClick = (clickedNodeAnnotation) => {\n        if(clickedNodeAnnotation){\n            setNodeType(clickedNodeAnnotation.stepType)\n            setStepNumber(clickedNodeAnnotation.stepNumber)\n            setOpenConfigurationSheet(true)\n        }\n    }\n\n    const handleSheetClose = () => {\n        setOpenConfigurationSheet(false)\n    }\n\n    const getNodeConfiguration = useCallback(() => {\n        if(nodeType){\n            switch(nodeType){\n                case 'documentUpload': \n                    return <DocumentUploadEditConfiguration />\n                case 'multiReview':\n                    return <DocumentReviewEditConfiguration />\n                case 'singleReview':\n                    return <DocumentSingleReviewEditConfiguration nodeType={nodeType} stepNumber={stepNumber} />\n                default:\n                    return null\n                \n            }\n        }\n    }, [nodeType, stepNumber])\n\n    const handleWorkflowSave = async (values) => {\n        console.log('values', values)\n\n        //TODO - API call to initiate workflow\n        // const response = await fetch('http://localhost:8888/workflow/initiate', {\n        //     method: 'POST',\n        //     body: JSON.stringify({\n        //         \"workflowType\": type,\n        //         \"name\": values.workflowName\n        //         //also need to send step config values\n        //     })\n        // })\n\n        // if(response.ok){\n        //     setShowWorkflowStartToast(true)\n        //     //redirect to workflow listing\n        // }else{\n        //     //show error toast\n        // }\n\n        setShowWorkflowStartToast(true)\n        // const { workflowId, workflowType, name } = response.json()\n        const createdWorkflow = {\n            \"workflowId\": \"7aa6682f-910e-49ac-8698-9eab44295b80\",\n            \"workflowType\": type,\n            \"name\": values.workflowName\n        }\n\n        if(createdWorkflow.workflowId) {\n            //store in localstorage and redirect to workspace listing\n            const allWorkflows = [...workflows, createdWorkflow]\n            setWorkflows(allWorkflows)\n            history.push('/workflows/')\n        }\n    }\n\n    return (            \n            <Formik initialValues={{selectedDocument: [], reviewers: [], workflowName: ''}} onSubmit={handleWorkflowSave}>\n                        {({\n                            handleSubmit,\n                            handleChange\n                        }) => (\n                            <Form onSubmit={handleSubmit}>\n                            <Container fluid>\n                    <Row style={{margin: '20px'}}>\n                        <Col xs={4} style={{textAlign: 'left'}}><h4>Create Workflow</h4></Col>\n                        <Col xs={4}>\n                            <Form.Group controlId=\"formWorkflowName\">\n                                <Form.Control type=\"text\" name=\"workflowName\" onChange={handleChange}/>\n                                <Form.Text className=\"text-muted\">\n                                    Give your workflow a name\n                                </Form.Text>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={2}>\n                            <Button variant=\"primary\" type=\"submit\">Start Workflow</Button>\n                        </Col>\n                        <Col xs={2}>\n                            <span>Status: <FiberManualRecordIcon style={{color: 'grey'}} />Not Started</span>\n                        </Col>\n\n                    </Row>\n                    <Row>\n                        <Col>\n                            \n                            <WorkflowDiagram type={type} onNodeClick={handleNodeClick} />\n                            \n                                    <Sheet isOpen={openConfigurationSheet} handleClose={handleSheetClose} title=\"Step Configuration\">\n                                        <DialogContent>\n                                            {getNodeConfiguration()}\n                                        </DialogContent>\n                                        <DialogActions>\n                                            <Button variant=\"light\" onClick={handleSheetClose}>Close</Button>\n                                        </DialogActions>\n                                    </Sheet>\n                                \n                        </Col>\n                    </Row>\n\n                    <Toastr isOpen={showSuccessToast} header=\"Workflow Configuration\" body=\"Saved step configuration\" />\n                    <Toastr isOpen={showWorkflowStartToast} header=\"Workflow\" body=\"New workflow started\" />\n                    </Container>    \n            \n            </Form>\n            )}\n            </Formik>\n    )\n}","import React, { useState, useCallback, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { WorkflowDiagram } from './WorkflowDiagram'\nimport { Sheet } from '../common'\nimport { DocumentReviewViewConfiguration, DocumentUploadViewConfiguration, DocumentSingleReviewViewConfiguration } from '../workflow-configurations'\nimport { DialogActions, DialogContent } from '@material-ui/core'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport { useParams } from 'react-router-dom'\n\nexport const ViewWorkflow = () => {\n\n    let { workflowId, type } = useParams()\n\n    const [fetchedWorkflow, setFetchedWorkflow] = useState({})\n    const [nodeType, setNodeType] = useState('')\n    const [stepNumber, setStepNumber] = useState('')\n    const [openConfigurationSheet, setOpenConfigurationSheet] = useState(false)\n\n    useEffect(() => {\n        //get workflow information from workflowId\n        const fetchWorkflow = async () => {\n            const response = await fetch(`http://localhost:8888/workflow/history/${workflowId}`, {\n                method: 'GET'\n            })\n            if(response.ok){\n                // const workflow = response.json()\n                const workflow = {\n                    \"workflowId\": \"7aa6682f-910e-49ac-8698-9eab44295b80\",\n                    \"history\": [\n                        {\n                            \"eventId\": \"1\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"2\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"3\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"4\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"5\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"6\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"7\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"8\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"9\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"10\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"11\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"12\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"13\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"14\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"15\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"16\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"17\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"18\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"19\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"20\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"21\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"22\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"23\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"24\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"25\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"26\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"27\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"28\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"29\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"30\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"31\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"32\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"33\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"34\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"35\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"36\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"37\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"38\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"39\",\n                            \"eventType\": null,\n                            \"state\": null\n                        },\n                        {\n                            \"eventId\": \"40\",\n                            \"eventType\": null,\n                            \"state\": null\n                        }\n                    ]\n                }\n\n                setFetchedWorkflow(workflow)\n            }else{\n                console.error('Not able to get workflow details')\n            }\n        }\n\n        fetchWorkflow()\n    }, [workflowId])\n\n    const handleNodeClick = (clickedNodeAnnotation) => {\n        if(clickedNodeAnnotation){\n            setNodeType(clickedNodeAnnotation.stepType)\n            setStepNumber(clickedNodeAnnotation.stepNumber)\n            setOpenConfigurationSheet(true)\n        }\n    }\n\n    const handleSheetClose = () => {\n        setOpenConfigurationSheet(false)\n    }\n\n    const getNodeConfiguration = useCallback(() => {\n        if(nodeType){\n            switch(nodeType){\n                case 'documentUpload': \n                    return <DocumentUploadViewConfiguration workflow={fetchedWorkflow} />\n                case 'multiReview':\n                    return <DocumentReviewViewConfiguration workflow={fetchedWorkflow} />\n                case 'singleReview':\n                    return <DocumentSingleReviewViewConfiguration workflow={fetchedWorkflow} />\n                default:\n                    return null\n                \n            }\n        }\n    }, [nodeType, workflowId])\n\n    return (\n        <>\n            <Container fluid>\n                <Row style={{margin: '20px'}}>\n                    <Col xs={6} style={{textAlign: 'left'}}><h4>View Workflow</h4></Col>\n                    <Col xs={3}>\n                        <span>Status: <FiberManualRecordIcon style={{color: 'grey'}} />Not Started</span>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col>\n                        \n                        <WorkflowDiagram type={type} onNodeClick={handleNodeClick} />\n                        <Sheet isOpen={openConfigurationSheet} handleClose={handleSheetClose} title=\"Step Configuration\">\n                            <DialogContent>\n                                {getNodeConfiguration()}\n                            </DialogContent>\n                            <DialogActions>\n                                <Button variant=\"light\" onClick={handleSheetClose}>Cancel</Button>\n                            </DialogActions>\n                        </Sheet>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport { useHistory } from 'react-router-dom'\n\nexport const WorkflowApproval = () => {\n  const rowStyle =\n  {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n\n  const handleApproval = () => {\n    alert('Workflow has been Approved');\n  }\n\n  const handleRejection = () => {\n    alert('Workflow has been Rejected');\n  }\n\n  return (\n    <Container fluid>\n      <Row style={{ margin: '20px', borderBottom: '1px solid black' }}>\n        <h3> WorkFlow Approval Page</h3>\n      </Row>\n\n      <Row style={{ margin: '30px' }}>\n        <Col xs={2} style={rowStyle}><h4>1</h4></Col>\n        <Col xs={4} style={rowStyle}><h4>First Workflow</h4></Col>\n        <Col xs={3} style={rowStyle}>\n          <Button variant='success' onClick={handleApproval}> Approve </Button>\n        </Col>\n        <Col xs={3} style={rowStyle}>\n          <Button variant='danger' onClick={handleRejection}> Reject </Button>\n        </Col>\n      </Row>\n\n\n    </Container>\n  )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport { useHistory } from 'react-router-dom'\nimport { useLocalStorage } from '../common'\n\nexport const WorkFlowHome = () => {\n  const history = useHistory()\n  const [workflows] = useLocalStorage('ws:workflows', [])\n\n  // const userData = [\n  //   {\n  //     id: 1,\n  //     name: 'First User',\n  //     type: 'sequential',\n  //     status: 'In Progress'\n  //   },\n  //   {\n  //     id: 2,\n  //     name: 'Second User',\n  //     type: 'parallel',\n  //     status: 'In Progress'\n  //   }\n  // ]\n\n  const handleRowClick = (item) => {\n    if(item && item.workflowId){\n      const workflowTypeLowerCase = item.workflowType.toLowerCase()\n      history.push(`/workflows/view/${workflowTypeLowerCase}/${item.workflowId}`)\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row style={{ margin: '20px' }}>\n        <Col xs={6} style={{ textAlign: 'left' }}><h3>Your Workflows</h3></Col>\n        <Col xs={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Create Workflows\">\n            <Dropdown.Item as={NavLink} to=\"/workflows/create/sequential\">Sequential Review</Dropdown.Item>\n            <Dropdown.Item as={NavLink} to=\"/workflows/create/parallel\">Parallel Review</Dropdown.Item>\n          </DropdownButton>\n        </Col>\n      </Row>\n\n      <Row style={{ margin: '40px' }}>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            {workflows.map(item => {\n              return (\n                <tr key={item.workflowId} onClick={() => handleRowClick(item)}>\n                  <td>{item.workflowId}</td>\n                  <td>{item.name}</td>\n                  <td>{item.workflowType}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </Row>\n    </Container>\n  )\n}","import React from 'react'\nimport { WorkFlowHome } from './workflow-table/WorkFlowHome'\n\nexport const Home = () => {\n  return (\n    <WorkFlowHome />\n  )\n}","import React from 'react'\nimport './App.css'\nimport { Route, HashRouter } from 'react-router-dom'\nimport { WorkflowCreation, ViewWorkflow, WorkflowApproval } from './workflow'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport { WorkFlowHome } from './workflow-table/WorkFlowHome'\nimport { Home } from './Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/workflows/\" component={WorkFlowHome} />\n        <Route exact path=\"/workflows/create/:type\" component={WorkflowCreation} />\n        <Route exact path=\"/workflows/view/:type/:workflowId\" component={ViewWorkflow} />\n        <Route exact path=\"/workflows/approval\" component={WorkflowApproval} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}